// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektSemestralny.Classes;

#nullable disable

namespace ProjektSemestralny.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20230612130828_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("ProjektSemestralny.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumerTelefonu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("ProjektSemestralny.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LiczbaPokoi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Hotel", (string)null);
                });

            modelBuilder.Entity("ProjektSemestralny.Models.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerID")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPrzyjazdu")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRezerwacji")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataWyjazdu")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoomID")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RoomID");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("ProjektSemestralny.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Dostepnosc")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HotelID")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumerPokoju")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypPokoju")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("HotelID");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("ProjektSemestralny.Models.Reservation", b =>
                {
                    b.HasOne("ProjektSemestralny.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektSemestralny.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ProjektSemestralny.Models.Room", b =>
                {
                    b.HasOne("ProjektSemestralny.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });
#pragma warning restore 612, 618
        }
    }
}
